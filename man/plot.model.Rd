% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_model.R
\name{plot.model}
\alias{plot.model}
\title{plot a Model}
\usage{
\method{plot}{model}(
  x,
  expandData = TRUE,
  expandProcess = TRUE,
  nmax = 100,
  dataNodeSize = 5,
  dparNodeSize = 12,
  parNodeSize = dparNodeSize,
  processNodeSize = dataNodeSize,
  covNodeSize = dparNodeSize,
  dimNodeSize = 25,
  minNodeSize = 3,
  fontSize = 12,
  opacity = 1,
  legend = TRUE,
  zoom = TRUE,
  arrows = TRUE,
  colourScale = NULL,
  ...
)
}
\arguments{
\item{x}{Model}

\item{expandData}{logical. If true each data point defines a node}

\item{expandProcess}{logical. If true each process value defines a node}

\item{nmax}{integer. When expandData and/or expandProcess is true, nmax
defines the maximum number of nodes for individual data
or process values}

\item{dataNodeSize}{numerix. Size of a data node.}

\item{dparNodeSize}{logical. Size of parent distribution parameter node.}

\item{parNodeSize}{logical. Size of a parameter node.}

\item{processNodeSize}{logical. Size of a process node.}

\item{covNodeSize}{logical. Size of a covariate node.}

\item{dimNodeSize}{logical. Size of a dimension node.}

\item{minNodeSize}{logical. Minimum node size. Used for dataset/process
node when expandData/expandProcess is TRUE.}

\item{fontSize}{numeric. Text size.}

\item{opacity}{numeric between 0 ad 1. Nodes opacity.}

\item{legend}{logical. Add legend?}

\item{zoom}{logical. Enable zoom?}

\item{arrows}{logical. Use arrows for links?}

\item{colourScale}{string. A JavaScript/D3 valid colorscale.}

\item{...}{other arguments passed to the function 'forceNetwork()'}
}
\value{
nothing - plotting function.
}
\description{
Plot the Directed Acyclic Graph of a model
}
\examples{
# Generate a fake dataset
dat <- dataset(Y=data.frame(Y=rlnorm(50)))
# Define parameters to be estimated: mu and sigma
param <- list(parameter(name='mu',init=0),parameter(name='sigma',init=1))
# Define model
mod <- model(dataset=dat,parentDist='LogNormal',
             formula=c('meanlog=mu','sdlog=sigma'),par=param)
# plot it
plot(mod)
}
